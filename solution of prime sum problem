Given an even number ( greater than 2 ), return two prime numbers whose sum will be equal to given number.

NOTE A solution will always exist. read Goldbachâ€™s conjecture

Example:


Input : 4
Output: 2 + 2 = 4

If there are more than one solutions possible, return the lexicographically smaller solution.

If [a, b] is one solution with a <= b,
and [c,d] is another solution with c <= d, then

[a, b] < [c, d] 

If a < c OR a==c AND b < d.

SOLUTION I
bool checkPrime(int x){
    if(x<=1) return 0;
    if(x==2) return 1;
    if(x%2==0) return 0;
    else{
        int n=sqrt(x);
        for(int i=2; i<n+2;i++){
            if(checkPrime(i)){
                if(x%i==0) return 0;
            }
            
        }
        return 1;
    }
}
vector<int> Solution::primesum(int A) {
    vector<int> v;
    for(int i=2;i<A;i++){
        if(checkPrime(i)){
            if(checkPrime(A-i)){
                v.push_back(i);
                v.push_back(A-i);
                return v;
            }
        }
    }
}

SOLUTION II
vector<int> Solution::primesum(int A) {
    vector<int> v;
    vector<bool> mp;
    //checkPrime(A,mp);
    mp.push_back(false);
    mp.push_back(false);
    for(int i=2;i<=A;i++){
        mp.push_back(true);
    }
    for(int i=2;i<=sqrt(A);i++){
        if(mp[i]==true){
            for(int j=2;i*j<=A;j++){
                mp[i*j]=false;
            }
        }
    }
    for(int i=2;i<=A;i++){
        if(mp[i]==true){
            if(mp[A-i]==true){
                v.push_back(i);
                v.push_back(A-i);
                return v;
            }    
        }
    }
}
